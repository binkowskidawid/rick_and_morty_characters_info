import type {GetStaticProps, NextPage} from 'next'
import Head from 'next/head'
import DataToRender from "../components/DataToRender";
import {ChangeEvent, useEffect, useState} from "react";
import {Character, GetCharacterResults} from "../types";
import Image from 'next/image'
import imageLoader from "../imageLoader";
import Link from "next/link";

const Home: NextPage<{ characters: Character[] }> = ({characters}) => {

    const [character, setCharacter] = useState(); // State which show filtered and updated data from API
    const [input, setInput] = useState("")

    // useEffect(() => {
    //         getCharacter();
    //     }, [input, character]
    // );
    //
    // const getCharacter = async () => {
    //     const response = await fetch(url);
    //     const data = await response.json();
    //     const matchCharacter = data.filter(
    //         (element: string) => element === input
    //     );
    //     setCharacter(matchCharacter);
    //     console.log(character)
    // }
    //
    const handleClick = (e: any) => {
        e.preventDefault();
    }

    // console.log(input, character)
    // console.log(characters)

    return (
        <div className="container mx-auto min-h-screen">
            <Head>
                <title>Next.js app example with TS</title>
                <meta name="description" content="Generated by create next app"/>
                <link rel="icon" href="/favicon.ico"/>
            </Head>

            <main className="flex flex-col w-full items-center justify-center py-4">
                <h1 className="mb-4 text-5xl text-center font-bold text-slate-700 drop-shadow-lg">
                    Rick and Morty characters
                </h1>
                {/*<form className="flex flex-col justify-center items-center">*/}
                {/*    <input className="border rounded p-2" type="text" onChange={(e) => setInput(e.target.value)}/>*/}
                {/*    <button className="rounded w-1/2 bg-green-500 shadow-lg shadow-green-500 py-1 px-2 my-2"*/}
                {/*            type="submit" onSubmit={handleClick}>Search*/}
                {/*    </button>*/}
                {/*</form>*/}
                <section className="flex flex-wrap items-center justify-around">
                {/*<DataToRender/>*/}
                {characters.map(el => (
                    <Link key={el.id} href={`characters/${el.id}`}>
                        <a>
                            <div className="px-2 py-4 flex flex-col items-center justify-center">
                                <p className="text-lg font-bold pb-1 w-[150px]">{el.name}</p>
                                <Image loader={imageLoader} unoptimized src={el.image} alt={el.name} width={150}
                                       height={150}
                                       className="rounded"/>
                                <div className="w-full flex items-end justify-end">
                                <button className="text-right my-1 px-2 py-1 bg-green-500 rounded">Read more...</button>
                                </div>
                            </div>
                        </a>
                    </Link>

                ))}
                </section>
            </main>
            <footer className="relative bottom-0 left-0 w-full pb-2 text-center font-extrabold text-slate-500 text-md">
                <p>Rick and Morty 2022</p>
            </footer>
        </div>
    )
}

const url = process.env.NEXT_API_URL; // URL address to API

export const getStaticProps: GetStaticProps = async (context) => {
    const res = await fetch(`${url}`);
    const {results}: GetCharacterResults = await res.json();

    return {
        props: {
            characters: results
        }
    }
}

export default Home
